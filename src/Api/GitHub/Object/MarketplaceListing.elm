-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.GitHub.Object.MarketplaceListing exposing (..)

import Api.GitHub.InputObject
import Api.GitHub.Interface
import Api.GitHub.Object
import Api.GitHub.Scalar
import Api.GitHub.ScalarCodecs
import Api.GitHub.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The GitHub App this listing represents.
-}
app : SelectionSet decodesTo Api.GitHub.Object.App -> SelectionSet (Maybe decodesTo) Api.GitHub.Object.MarketplaceListing
app object_ =
    Object.selectionForCompositeField "app" [] object_ (identity >> Decode.nullable)


{-| URL to the listing owner's company site.
-}
companyUrl : SelectionSet (Maybe Api.GitHub.ScalarCodecs.Uri) Api.GitHub.Object.MarketplaceListing
companyUrl =
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "companyUrl" [] (Api.GitHub.ScalarCodecs.codecs |> Api.GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| The HTTP path for configuring access to the listing's integration or OAuth app
-}
configurationResourcePath : SelectionSet Api.GitHub.ScalarCodecs.Uri Api.GitHub.Object.MarketplaceListing
configurationResourcePath =
    Object.selectionForField "ScalarCodecs.Uri" "configurationResourcePath" [] (Api.GitHub.ScalarCodecs.codecs |> Api.GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| The HTTP URL for configuring access to the listing's integration or OAuth app
-}
configurationUrl : SelectionSet Api.GitHub.ScalarCodecs.Uri Api.GitHub.Object.MarketplaceListing
configurationUrl =
    Object.selectionForField "ScalarCodecs.Uri" "configurationUrl" [] (Api.GitHub.ScalarCodecs.codecs |> Api.GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| URL to the listing's documentation.
-}
documentationUrl : SelectionSet (Maybe Api.GitHub.ScalarCodecs.Uri) Api.GitHub.Object.MarketplaceListing
documentationUrl =
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "documentationUrl" [] (Api.GitHub.ScalarCodecs.codecs |> Api.GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| The listing's detailed description.
-}
extendedDescription : SelectionSet (Maybe String) Api.GitHub.Object.MarketplaceListing
extendedDescription =
    Object.selectionForField "(Maybe String)" "extendedDescription" [] (Decode.string |> Decode.nullable)


{-| The listing's detailed description rendered to HTML.
-}
extendedDescriptionHTML : SelectionSet Api.GitHub.ScalarCodecs.Html Api.GitHub.Object.MarketplaceListing
extendedDescriptionHTML =
    Object.selectionForField "ScalarCodecs.Html" "extendedDescriptionHTML" [] (Api.GitHub.ScalarCodecs.codecs |> Api.GitHub.Scalar.unwrapCodecs |> .codecHtml |> .decoder)


{-| The listing's introductory description.
-}
fullDescription : SelectionSet String Api.GitHub.Object.MarketplaceListing
fullDescription =
    Object.selectionForField "String" "fullDescription" [] Decode.string


{-| The listing's introductory description rendered to HTML.
-}
fullDescriptionHTML : SelectionSet Api.GitHub.ScalarCodecs.Html Api.GitHub.Object.MarketplaceListing
fullDescriptionHTML =
    Object.selectionForField "ScalarCodecs.Html" "fullDescriptionHTML" [] (Api.GitHub.ScalarCodecs.codecs |> Api.GitHub.Scalar.unwrapCodecs |> .codecHtml |> .decoder)


{-| Whether this listing has been submitted for review from GitHub for approval to be displayed in the Marketplace.
-}
hasApprovalBeenRequested : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
hasApprovalBeenRequested =
    Object.selectionForField "Bool" "hasApprovalBeenRequested" [] Decode.bool


{-| Does this listing have any plans with a free trial?
-}
hasPublishedFreeTrialPlans : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
hasPublishedFreeTrialPlans =
    Object.selectionForField "Bool" "hasPublishedFreeTrialPlans" [] Decode.bool


{-| Does this listing have a terms of service link?
-}
hasTermsOfService : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
hasTermsOfService =
    Object.selectionForField "Bool" "hasTermsOfService" [] Decode.bool


{-| A technical description of how this app works with GitHub.
-}
howItWorks : SelectionSet (Maybe String) Api.GitHub.Object.MarketplaceListing
howItWorks =
    Object.selectionForField "(Maybe String)" "howItWorks" [] (Decode.string |> Decode.nullable)


{-| The listing's technical description rendered to HTML.
-}
howItWorksHTML : SelectionSet Api.GitHub.ScalarCodecs.Html Api.GitHub.Object.MarketplaceListing
howItWorksHTML =
    Object.selectionForField "ScalarCodecs.Html" "howItWorksHTML" [] (Api.GitHub.ScalarCodecs.codecs |> Api.GitHub.Scalar.unwrapCodecs |> .codecHtml |> .decoder)


id : SelectionSet Api.GitHub.ScalarCodecs.Id Api.GitHub.Object.MarketplaceListing
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Api.GitHub.ScalarCodecs.codecs |> Api.GitHub.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| URL to install the product to the viewer's account or organization.
-}
installationUrl : SelectionSet (Maybe Api.GitHub.ScalarCodecs.Uri) Api.GitHub.Object.MarketplaceListing
installationUrl =
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "installationUrl" [] (Api.GitHub.ScalarCodecs.codecs |> Api.GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| Whether this listing's app has been installed for the current viewer
-}
installedForViewer : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
installedForViewer =
    Object.selectionForField "Bool" "installedForViewer" [] Decode.bool


{-| Whether this listing has been approved for display in the Marketplace.
-}
isApproved : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
isApproved =
    Object.selectionForField "Bool" "isApproved" [] Decode.bool


{-| Whether this listing has been removed from the Marketplace.
-}
isArchived : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
isArchived =
    Object.selectionForField "Bool" "isArchived" [] Decode.bool


{-| Whether this listing has been removed from the Marketplace.
-}
isDelisted : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
isDelisted =
    Object.selectionForField "Bool" "isDelisted" [] Decode.bool


{-| Whether this listing is still an editable draft that has not been submitted for review and is not publicly visible in the Marketplace.
-}
isDraft : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
isDraft =
    Object.selectionForField "Bool" "isDraft" [] Decode.bool


{-| Whether the product this listing represents is available as part of a paid plan.
-}
isPaid : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
isPaid =
    Object.selectionForField "Bool" "isPaid" [] Decode.bool


{-| Whether this listing has been approved for display in the Marketplace.
-}
isPublic : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
isPublic =
    Object.selectionForField "Bool" "isPublic" [] Decode.bool


{-| Whether this listing has been rejected by GitHub for display in the Marketplace.
-}
isRejected : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
isRejected =
    Object.selectionForField "Bool" "isRejected" [] Decode.bool


{-| Whether this listing has been approved for unverified display in the Marketplace.
-}
isUnverified : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
isUnverified =
    Object.selectionForField "Bool" "isUnverified" [] Decode.bool


{-| Whether this draft listing has been submitted for review for approval to be unverified in the Marketplace.
-}
isUnverifiedPending : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
isUnverifiedPending =
    Object.selectionForField "Bool" "isUnverifiedPending" [] Decode.bool


{-| Whether this draft listing has been submitted for review from GitHub for approval to be verified in the Marketplace.
-}
isVerificationPendingFromDraft : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
isVerificationPendingFromDraft =
    Object.selectionForField "Bool" "isVerificationPendingFromDraft" [] Decode.bool


{-| Whether this unverified listing has been submitted for review from GitHub for approval to be verified in the Marketplace.
-}
isVerificationPendingFromUnverified : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
isVerificationPendingFromUnverified =
    Object.selectionForField "Bool" "isVerificationPendingFromUnverified" [] Decode.bool


{-| Whether this listing has been approved for verified display in the Marketplace.
-}
isVerified : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
isVerified =
    Object.selectionForField "Bool" "isVerified" [] Decode.bool


{-| The hex color code, without the leading '#', for the logo background.
-}
logoBackgroundColor : SelectionSet String Api.GitHub.Object.MarketplaceListing
logoBackgroundColor =
    Object.selectionForField "String" "logoBackgroundColor" [] Decode.string


type alias LogoUrlOptionalArguments =
    { size : OptionalArgument Int }


{-| URL for the listing's logo image.

  - size - The size in pixels of the resulting square image.

-}
logoUrl : (LogoUrlOptionalArguments -> LogoUrlOptionalArguments) -> SelectionSet (Maybe Api.GitHub.ScalarCodecs.Uri) Api.GitHub.Object.MarketplaceListing
logoUrl fillInOptionals =
    let
        filledInOptionals =
            fillInOptionals { size = Absent }

        optionalArgs =
            [ Argument.optional "size" filledInOptionals.size Encode.int ]
                |> List.filterMap identity
    in
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "logoUrl" optionalArgs (Api.GitHub.ScalarCodecs.codecs |> Api.GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| The listing's full name.
-}
name : SelectionSet String Api.GitHub.Object.MarketplaceListing
name =
    Object.selectionForField "String" "name" [] Decode.string


{-| The listing's very short description without a trailing period or ampersands.
-}
normalizedShortDescription : SelectionSet String Api.GitHub.Object.MarketplaceListing
normalizedShortDescription =
    Object.selectionForField "String" "normalizedShortDescription" [] Decode.string


{-| URL to the listing's detailed pricing.
-}
pricingUrl : SelectionSet (Maybe Api.GitHub.ScalarCodecs.Uri) Api.GitHub.Object.MarketplaceListing
pricingUrl =
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "pricingUrl" [] (Api.GitHub.ScalarCodecs.codecs |> Api.GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| The category that best describes the listing.
-}
primaryCategory : SelectionSet decodesTo Api.GitHub.Object.MarketplaceCategory -> SelectionSet decodesTo Api.GitHub.Object.MarketplaceListing
primaryCategory object_ =
    Object.selectionForCompositeField "primaryCategory" [] object_ identity


{-| URL to the listing's privacy policy, may return an empty string for listings that do not require a privacy policy URL.
-}
privacyPolicyUrl : SelectionSet Api.GitHub.ScalarCodecs.Uri Api.GitHub.Object.MarketplaceListing
privacyPolicyUrl =
    Object.selectionForField "ScalarCodecs.Uri" "privacyPolicyUrl" [] (Api.GitHub.ScalarCodecs.codecs |> Api.GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| The HTTP path for the Marketplace listing.
-}
resourcePath : SelectionSet Api.GitHub.ScalarCodecs.Uri Api.GitHub.Object.MarketplaceListing
resourcePath =
    Object.selectionForField "ScalarCodecs.Uri" "resourcePath" [] (Api.GitHub.ScalarCodecs.codecs |> Api.GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| The URLs for the listing's screenshots.
-}
screenshotUrls : SelectionSet (List (Maybe String)) Api.GitHub.Object.MarketplaceListing
screenshotUrls =
    Object.selectionForField "(List (Maybe String))" "screenshotUrls" [] (Decode.string |> Decode.nullable |> Decode.list)


{-| An alternate category that describes the listing.
-}
secondaryCategory : SelectionSet decodesTo Api.GitHub.Object.MarketplaceCategory -> SelectionSet (Maybe decodesTo) Api.GitHub.Object.MarketplaceListing
secondaryCategory object_ =
    Object.selectionForCompositeField "secondaryCategory" [] object_ (identity >> Decode.nullable)


{-| The listing's very short description.
-}
shortDescription : SelectionSet String Api.GitHub.Object.MarketplaceListing
shortDescription =
    Object.selectionForField "String" "shortDescription" [] Decode.string


{-| The short name of the listing used in its URL.
-}
slug : SelectionSet String Api.GitHub.Object.MarketplaceListing
slug =
    Object.selectionForField "String" "slug" [] Decode.string


{-| URL to the listing's status page.
-}
statusUrl : SelectionSet (Maybe Api.GitHub.ScalarCodecs.Uri) Api.GitHub.Object.MarketplaceListing
statusUrl =
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "statusUrl" [] (Api.GitHub.ScalarCodecs.codecs |> Api.GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| An email address for support for this listing's app.
-}
supportEmail : SelectionSet (Maybe String) Api.GitHub.Object.MarketplaceListing
supportEmail =
    Object.selectionForField "(Maybe String)" "supportEmail" [] (Decode.string |> Decode.nullable)


{-| Either a URL or an email address for support for this listing's app, may return an empty string for listings that do not require a support URL.
-}
supportUrl : SelectionSet Api.GitHub.ScalarCodecs.Uri Api.GitHub.Object.MarketplaceListing
supportUrl =
    Object.selectionForField "ScalarCodecs.Uri" "supportUrl" [] (Api.GitHub.ScalarCodecs.codecs |> Api.GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| URL to the listing's terms of service.
-}
termsOfServiceUrl : SelectionSet (Maybe Api.GitHub.ScalarCodecs.Uri) Api.GitHub.Object.MarketplaceListing
termsOfServiceUrl =
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "termsOfServiceUrl" [] (Api.GitHub.ScalarCodecs.codecs |> Api.GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| The HTTP URL for the Marketplace listing.
-}
url : SelectionSet Api.GitHub.ScalarCodecs.Uri Api.GitHub.Object.MarketplaceListing
url =
    Object.selectionForField "ScalarCodecs.Uri" "url" [] (Api.GitHub.ScalarCodecs.codecs |> Api.GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| Can the current viewer add plans for this Marketplace listing.
-}
viewerCanAddPlans : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
viewerCanAddPlans =
    Object.selectionForField "Bool" "viewerCanAddPlans" [] Decode.bool


{-| Can the current viewer approve this Marketplace listing.
-}
viewerCanApprove : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
viewerCanApprove =
    Object.selectionForField "Bool" "viewerCanApprove" [] Decode.bool


{-| Can the current viewer delist this Marketplace listing.
-}
viewerCanDelist : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
viewerCanDelist =
    Object.selectionForField "Bool" "viewerCanDelist" [] Decode.bool


{-| Can the current viewer edit this Marketplace listing.
-}
viewerCanEdit : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
viewerCanEdit =
    Object.selectionForField "Bool" "viewerCanEdit" [] Decode.bool


{-| Can the current viewer edit the primary and secondary category of this
Marketplace listing.
-}
viewerCanEditCategories : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
viewerCanEditCategories =
    Object.selectionForField "Bool" "viewerCanEditCategories" [] Decode.bool


{-| Can the current viewer edit the plans for this Marketplace listing.
-}
viewerCanEditPlans : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
viewerCanEditPlans =
    Object.selectionForField "Bool" "viewerCanEditPlans" [] Decode.bool


{-| Can the current viewer return this Marketplace listing to draft state
so it becomes editable again.
-}
viewerCanRedraft : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
viewerCanRedraft =
    Object.selectionForField "Bool" "viewerCanRedraft" [] Decode.bool


{-| Can the current viewer reject this Marketplace listing by returning it to
an editable draft state or rejecting it entirely.
-}
viewerCanReject : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
viewerCanReject =
    Object.selectionForField "Bool" "viewerCanReject" [] Decode.bool


{-| Can the current viewer request this listing be reviewed for display in
the Marketplace as verified.
-}
viewerCanRequestApproval : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
viewerCanRequestApproval =
    Object.selectionForField "Bool" "viewerCanRequestApproval" [] Decode.bool


{-| Indicates whether the current user has an active subscription to this Marketplace listing.
-}
viewerHasPurchased : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
viewerHasPurchased =
    Object.selectionForField "Bool" "viewerHasPurchased" [] Decode.bool


{-| Indicates if the current user has purchased a subscription to this Marketplace listing
for all of the organizations the user owns.
-}
viewerHasPurchasedForAllOrganizations : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
viewerHasPurchasedForAllOrganizations =
    Object.selectionForField "Bool" "viewerHasPurchasedForAllOrganizations" [] Decode.bool


{-| Does the current viewer role allow them to administer this Marketplace listing.
-}
viewerIsListingAdmin : SelectionSet Bool Api.GitHub.Object.MarketplaceListing
viewerIsListingAdmin =
    Object.selectionForField "Bool" "viewerIsListingAdmin" [] Decode.bool
